unit uInTypeMgr;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, uGlobal, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxStyles, dxSkinsCore, dxSkinCaramel,
  dxSkinscxPC3Painter, cxCustomData, cxFilter, cxData, cxDataStorage, cxEdit,
  DB, cxDBData, Menus, StdCtrls, cxButtons, cxGridLevel, cxGridCustomTableView,
  cxGridTableView, cxGridDBTableView, cxClasses, cxGridCustomView, cxGrid, ADODB;

type
  TfrmInTypeMgr = class(TForm)
    adoInType: TADOQuery;
    dsInType: TDataSource;
    cxGrid1: TcxGrid;
    cxGInType: TcxGridDBTableView;
    cxGrid1Level1: TcxGridLevel;
    btnLocationAppend: TcxButton;
    btnLocationUpdate: TcxButton;
    cxGInTypeInTypeName: TcxGridDBColumn;
    cxGInTypeUsed: TcxGridDBColumn;
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure cxGInTypeCustomDrawCell(Sender: TcxCustomGridTableView;
      ACanvas: TcxCanvas; AViewInfo: TcxGridTableDataCellViewInfo;
      var ADone: Boolean);
    procedure btnLocationAppendClick(Sender: TObject);
    procedure btnLocationUpdateClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmInTypeMgr: TfrmInTypeMgr;

implementation
uses uDB, uConfig;
{$R *.dfm}

procedure TfrmInTypeMgr.btnLocationAppendClick(Sender: TObject);
var
  oInput: TInputResult;
begin
  if not adoInType.active then Exit;

  oInput := oGlobal.InputMsg('입원형태', '', 20, True);

  while  oInput.Result = mrOK do
  begin
    if dbMain.isDuplicatedInTypeName(oConfig.User.HospitalID, oInput.Text) then
    begin
      oGlobal.Msg('같은 입원형태가 있습니다!');
      oInput := oGlobal.InputMsg('입원형태', oInput.Text, 20, True);
    end
    else
      break;
  end;

  if oInput.Result <> mrOK then Exit;

  adoInType.DisableControls;
  try
    adoInType.Connection.BeginTrans;
    adoInType.Append;
    adoInType.FieldByName('HospitalID').AsInteger := oConfig.User.HospitalID;
    adoInType.FieldByName('InTypeName').AsString := oInput.Text;
    adoInType.FieldByName('Used').AsBoolean := oInput.Used;
    adoInType.Post;
    adoInType.Connection.CommitTrans;
    oGlobal.Msg('등록했습니다!');
  except
    adoInType.Connection.RollbackTrans;
    adoInType.Cancel;
    oGlobal.Msg('신규등록에 실패했습니다!');
  end;
  adoInType.EnableControls;
end;

procedure TfrmInTypeMgr.btnLocationUpdateClick(Sender: TObject);
var
  sInTypeName: string;
  bUsed: Boolean;
  oInput: TInputResult;
begin
  if adoInType.IsEmpty then Exit;

  sInTypeName := adoInType.FieldByName('InTypeName').AsString;
  bUsed := adoInType.FieldByName('Used').AsBoolean;

  oInput := oGlobal.InputMsg('입원형태', sInTypeName, 20, bUsed);

  while oInput.Result = mrOK do
  begin
    if (sInTypeName <> oInput.Text) and
      dbMain.isDuplicatedInTypeName(oConfig.User.HospitalID, sInTypeName) then
    begin
      oGlobal.Msg('같은 입원행탸가 있습니다!');
      oInput := oGlobal.InputMsg('입원형태', oInput.Text, 20, oInput.Used);
    end
    else
      break;
  end;

  if oInput.Result <> mrOK then Exit;

  adoInType.DisableControls;
  try
    adoInType.Connection.BeginTrans;
    adoInType.Edit;
    adoInType.FieldByName('LocationName').AsString := oInput.Text;
    adoInType.FieldByName('Used').AsBoolean := oInput.Used;
    adoInType.Post;
    adoInType.Connection.CommitTrans;
    oGlobal.Msg('수정했습니다!');
  except
    adoInType.Connection.RollbackTrans;
    adoInType.Cancel;
    oGlobal.Msg('장소명 수정에 실패했습니다!');
  end;
  adoInType.EnableControls;
end;

procedure TfrmInTypeMgr.cxGInTypeCustomDrawCell(
  Sender: TcxCustomGridTableView; ACanvas: TcxCanvas;
  AViewInfo: TcxGridTableDataCellViewInfo; var ADone: Boolean);
var
  iIndex: integer;
begin
  iIndex := AViewInfo.RecordViewInfo.GridRecord.Index;

  if Sender.DataController.GetValue(iIndex, cxGInTypeUsed.Index) = False then
    ACanvas.Font.Color := clSilver;
end;

procedure TfrmInTypeMgr.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  adoInType.Close;
end;

procedure TfrmInTypeMgr.FormShow(Sender: TObject);
begin
  adoInType.Close;
  adoInType.Parameters.ParamByName('HospitalID').Value := oConfig.User.HospitalID;
  adoInType.Open;
end;

end.
